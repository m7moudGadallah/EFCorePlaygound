// <auto-generated />
using CFDataAnnotations.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CFDataAnnotations.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20250219183432_CreateInstructorsTable")]
    partial class CreateInstructorsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CFDataAnnotations.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HeadInstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HeadInstructorId")
                        .IsUnique()
                        .HasFilter("[HeadInstructorId] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Department", b =>
                {
                    b.HasOne("CFDataAnnotations.Models.Instructor", "HeadInstructor")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("CFDataAnnotations.Models.Department", "HeadInstructorId");

                    b.Navigation("HeadInstructor");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Instructor", b =>
                {
                    b.HasOne("CFDataAnnotations.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFDataAnnotations.Models.Instructor", "Supervisor")
                        .WithMany("SupervisiedInstructors")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Department");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Department", b =>
                {
                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("CFDataAnnotations.Models.Instructor", b =>
                {
                    b.Navigation("ManagedDepartment");

                    b.Navigation("SupervisiedInstructors");
                });
#pragma warning restore 612, 618
        }
    }
}
